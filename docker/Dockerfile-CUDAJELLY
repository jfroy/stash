# Frontend
FROM --platform=$BUILDPLATFORM node:23-bookworm-slim AS frontend

ARG DEBIAN_FRONTEND=noninteractive \
    GITHASH \
    STASH_VERSION 
WORKDIR /stash

COPY ./ui/v2.5/package.json ./ui/v2.5/yarn.lock /stash/ui/v2.5/
COPY ./ui /stash/ui/
COPY ./graphql /stash/graphql/
COPY Makefile /stash/

RUN apt-get update && apt-get install -y  make git
RUN make pre-ui
RUN make generate-ui
RUN BUILD_DATE=$(date +"%Y-%m-%d %H:%M:%S") make ui

# Backend
FROM --platform=$BUILDPLATFORM golang:1.23-bookworm AS backend

ARG DEBIAN_FRONTEND=noninteractive \
    GITHASH \
    STASH_VERSION 
WORKDIR /stash

COPY ./go* ./*.go Makefile gqlgen.yml .gqlgenc.yml /stash/
COPY ./scripts /stash/scripts/
COPY ./pkg /stash/pkg/
COPY ./cmd /stash/cmd
COPY ./internal /stash/internal
COPY --from=frontend /stash/ /stash/

RUN apt-get update && apt-get install -y build-essential
RUN make generate-backend
RUN make flags-release flags-pie stash

# ffmpeg from jellyfin
FROM --platform=$BUILDPLATFORM debian:bookworm-slim AS ffmpeg

ARG DEBIAN_FRONTEND=noninteractive \
    GITHASH \
    STASH_VERSION \
    TARGETARCH
WORKDIR /

RUN apt update && apt install -y curl
RUN curl -fsL "https://github.com/jellyfin/jellyfin-ffmpeg/releases/download/v7.0.2-8/jellyfin-ffmpeg7_7.0.2-8-noble_${TARGETARCH}.deb" -o ffmpeg.deb

# Runtime
FROM nvidia/cuda:12.6.3-cudnn-runtime-ubuntu24.04

ARG DEBIAN_FRONTEND=noninteractive \
    PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
WORKDIR /

COPY --from=backend /stash/stash /usr/bin/
COPY --from=ffmpeg /ffmpeg.deb /run/ffmpeg.deb

RUN (dpkg -i /run/ffmpeg.deb || true) \
    && apt-get update \
    && apt-get -y install --fix-broken \
    && apt-get -y install python3 python3-pip python-is-python3 \
    && rm -rf /var/lib/apt/lists/* /var/cache/* /run/ffmpeg.deb /usr/lib/python3.12/EXTERNALLY-MANAGED
RUN pip install uv \
    && uv pip install --system stashapp-tools aiohttp asyncio pydantic
RUN mkdir -p /config \
    && chown -R 1000:1000 /config
RUN touch /.dockerenv

ENV LANG=C.UTF-8 \
    NVIDIA_DRIVER_CAPABILITIES=compute,video,utility \
    PATH="$PATH:/usr/lib/jellyfin-ffmpeg" \
    STASH_CONFIG_FILE=/config/config.yml \
    UMASK="0002"
USER ubuntu:ubuntu
WORKDIR /config

VOLUME ["/config"]
EXPOSE 9999
ENTRYPOINT ["/usr/bin/stash"]
